# 서블릿

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/fd062363-9d35-49c3-87c3-a562e2207005/c65085b7-23a5-46d7-9cbb-8702fe4b6eb8/Untitled.png)

회원 이름, 나이 입력 후 전송을 누르면 가입되는 화면

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/fd062363-9d35-49c3-87c3-a562e2207005/078482b6-22c4-4a88-89ef-691e56d6668e/Untitled.png)

서블릿이란 위 사진에서 초록색부분을 제외한 모든걸 지원해준다.

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/fd062363-9d35-49c3-87c3-a562e2207005/d5e7ff4b-1f94-4192-9330-473efe2c6062/Untitled.png)

- urlPatterns(/hello)의 url이 호출되면 서블릿 코드가 실행
- http요청 정보를 편리하게 사용할 수 있는 HttpServletRequest
- HTTP 응답 정보를 편리하게 제공할 수 있는 HttpServletResponse
- 개발자는 http스펙을 매우 편리하게 사용
- 

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/fd062363-9d35-49c3-87c3-a562e2207005/8b7d9841-37cf-42ea-9993-cda9a8483970/Untitled.png)

## 서블릿

### HTTP 요청, 응답 흐름

- HTTP 요청시
    - WAS는 Request, Response 객체를 새로 만들어서 서블릿 객체 호출
    - 개발자는 Request 객체에서 http 요청 정보를 편리하게 꺼내서 사용
    - 개발자는 Response 객체에 HTTP 응답 정보를 편리하게 입력
    - WAS는 Response 객체에 담겨있는 내용으로 HTTP 응답 정보를 생성

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/fd062363-9d35-49c3-87c3-a562e2207005/86eb581f-0f8b-46ff-9371-50603f6f538b/Untitled.png)

## 서블릿컨테이너

- 톰캣처럼 서블릿을 지원하는 WAS를 서블릿 컨테이너라고 함
- 서블릿 컨테이너는 서블릿 객체를 생성, 초기화 , 호출, 종료하는 생명주기 관리
- 서블릿 객체는 싱글톤으로 관리
    - 고객의 요청이 올 때 마다 계속 객체를 생성하는 것은 비효율
    - 최초 로딩 시점에 서블릿 객체를 미리 만들어두고 재활용
    - 모든 고객 요청은 동일한 서블릿 객체 인스턴스에 접근
    - 공유 번수 사용 주의
    - 서블릿 컨테이너 종료시 함께 종료
- JSP도 서블릿으로 변환 되어서 사용
- 동시 요청을 위한 멀티 쓰레드 처리 지원