# 웹 서버, 웹 애플리케이션 서버

웹이라는건 HTTP기반으로 통신을 한다.

THML, text

image, 음성, 영상, 파일

json,xml(api)

거의 모든 형태의 데이터 전송 가능

서버간에 데이터를 주고 받을 때도 대부부분 http사용

웹 서버란?

http기반으로 동작

정적 리소스 제공, 기타 부가기능 제공

정적(파일) HTML , CSS, JS,이미지, 영상

웹 애플리케이션 서버(was)

HTTP기반으로 동작

웹 서버 기능 포함 + (정적 리소스 제공 가능)

프로그램 코드를 실행해서 애플리케이션 로직 수행

- 동적  HTML, HTTP API( JSON )
- 서블릿, JSP,스프링 MVC

예) 톰캣(tomcat) Jetty, Undertow

웹 서버, 웹 애플리케이션 서버(WAS) 차이

- 웹 서버는 정적 리소스(파일), WAS는 애플리케이션 로직
- 사실은 둘의 용어도 경계도 모호함
    - 웹 서버도 프로그램을 실행하는 기능을 포함하기도 함
    - 웹 애플리케이션 서버도 웹 서버의 기능을 제공함
- 자바는 서블릿 컨테이너 기능을 제공하면  WAS
    - 서블릿 없이 자바코드를 실행하는 서버 프레임워크도 있음
- WAS는 애플리케이션 코드를 실행하는데 더 특화

웹 시스템 구성 - WAS, DB

- WAS, DB 만으로 시스템 구성 가능
- WAS는 정적 리소스, 애플리케이션 로직 모두 제공가능

- WAS가 너무 많은 역할을 담당, 서버 과부하 우려
- 가장 비싼 애플리케이션 로직이 정적 리소스 때문에 수행이 어려울 수 있음
- WAS 장애시 오류 화면도 노출 불가능
    - WAS는 생각보다 잘 죽는다.

일반적인 웹 시스템 구성 - WEB, WAS, DB

- 정적 리소스는 웹 서버가 처리
- 웹 서버는 애플리케이션 로직같은 동적인 처리가 필요하면 WAS에 요청을 위임
- WAS는 중요한 애플리케이션 로직 처리 전담

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/fd062363-9d35-49c3-87c3-a562e2207005/f768ffba-9fc7-4bd6-bf65-6f5caa052234/Untitled.png)

- 효율적인 리소스 관리
    - 정적 리소스가 많이 사용되면 WEB 서버 증설
    - 애플리케이션 리소스가 많이 사용되면 WAS 증설
    
    ![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/fd062363-9d35-49c3-87c3-a562e2207005/69260aa0-ecbd-4c74-b9da-9388e74bd9ce/Untitled.png)
    
- 정적 리소스만 제공하는 웹 서버는 잘 죽지 않음
- 애플리케이션 로직이 동작하는  WAS 서버는 잘 죽음
- WAS, DB 장애시 WEB서버가 오류 화면 제공 가능